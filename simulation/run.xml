<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast beautitemplate="Standard" beautistatus="" namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.base.evolution.alignment:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.tree.coalescent:beast.pkgmgmt:beast.base.core:beast.base.inference.util:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood" required="BEAST.base v2.7.5:BICEPS v1.1.2:bModelTest v1.3.3:OBAMA v1.1.1:ORC v1.1.2:BEASTLabs v2.0.2" version="2.7">


    <map name="Uniform" >beast.base.inference.distribution.Uniform</map>

    <map name="Exponential" >beast.base.inference.distribution.Exponential</map>

    <map name="LogNormal" >beast.base.inference.distribution.LogNormalDistributionModel</map>

    <map name="Normal" >beast.base.inference.distribution.Normal</map>

    <map name="Beta" >beast.base.inference.distribution.Beta</map>

    <map name="Gamma" >beast.base.inference.distribution.Gamma</map>

    <map name="LaplaceDistribution" >beast.base.inference.distribution.LaplaceDistribution</map>

    <map name="prior" >beast.base.inference.distribution.Prior</map>

    <map name="InverseGamma" >beast.base.inference.distribution.InverseGamma</map>

    <map name="OneOnX" >beast.base.inference.distribution.OneOnX</map>

    <map name="Poisson" >beast.base.inference.distribution.Poisson</map>

    <map name="Dirichlet" >beast.base.inference.distribution.Dirichlet</map>




    <data id="data" spec="beast.base.evolution.alignment.Alignment" dataType="nucleotide">
        $(seq-data)
    </data>


    <stubs id="stubs" spec="gammaspike.tree.Stubs" tree="@tree" prior="@ForwardTimeSimulatorResub" />

    <!-- <run id="mcmc" spec="coupledMCMC.CoupledMCMC" chains="4" resampleEvery="10000" chainLength="5000000"> -->
    <run id="mcmc" spec="MCMC" chainLength="5000000">
        <state id="state" spec="State" storeEvery="100000">


            <!-- <tree id="tree" name="stateNode">



                <trait id="traitsetDate" spec="beast.base.evolution.tree.TraitSet" traitname="date-backward" taxa="@taxonset">
                11=0.1,
                18=0.1          
                </trait>

                <taxonset id="taxonset" spec="beast.base.evolution.alignment.TaxonSet">
                    <data idref="data" name="alignment"/>
                </taxonset>
            </tree> -->



            <!-- Start at the true tree so we can rule out bad mixing.  -->
            <stateNode spec="beast.base.evolution.tree.TreeParser" id="tree" IsLabelledNewick="true" adjustTipHeights="false" newick="$(tree)" />


           
            <parameter id="lambda" spec="parameter.RealParameter" name="stateNode" lower="0">$(lambda)</parameter>
            <parameter id="r0" spec="parameter.RealParameter" name="stateNode" lower="1">$(r0)</parameter>
            <parameter id="samplingProportion" spec="parameter.RealParameter" name="stateNode" lower="0" upper="1">$(samplingProportion)</parameter>

            <parameter id="stubsPerBranch" spec="parameter.IntegerParameter" name="stateNode" lower="0">1</parameter>
            <parameter id="stubBranchNumbers" spec="parameter.IntegerParameter" name="stateNode" lower="0">1</parameter>
            <parameter id="stubTimes" spec="parameter.RealParameter" name="stateNode" lower="0">0.5</parameter>


            <parameter id="gammaShape" spec="parameter.RealParameter" name="stateNode" lower="0">1</parameter>
            <parameter id="kappa" spec="parameter.RealParameter" name="stateNode" lower="0">1</parameter>


            <parameter id="branchRates" spec="parameter.RealParameter" name="stateNode" lower="0" dimension="1">1</parameter> 
            <parameter id="spikes" spec="parameter.RealParameter" name="stateNode" lower="0" dimension="1">1</parameter> 
            <parameter id="clockSD" spec="parameter.RealParameter" name="stateNode" lower="0" upper="1">$(clockSD)</parameter>
            <parameter id="spikeShape" spec="parameter.RealParameter" name="stateNode" lower="0.2">$(spikeShape)</parameter>
            <parameter id="spikeMean" spec="parameter.RealParameter" name="stateNode" lower="0">$(spikeMean)</parameter>

            <parameter id="useSpikeModel" spec="parameter.BooleanParameter" name="stateNode">$(useSpikeModel)</parameter> <!--  -->

           
        </state>


        <!-- Fix tree -->
         <!-- <init estimate="false" id="RandomTree" initial="@tree" spec="beast.base.evolution.tree.coalescent.RandomTree" /> -->

        <distribution id="posterior" spec="CompoundDistribution">
            <distribution id="prior" spec="CompoundDistribution">
               


              


                 <distribution id="ForwardTimeSimulatorResub" spec="gammaspike.distribution.StumpedTreePrior" r0="@r0" lambda="@lambda" samplingProportion="@samplingProportion" ignoreTreePrior="false" ignoreStubPrior="false" tree="@tree"> 
                    <!-- <stubs id="stubs" spec="gammaspike.tree.Stubs" tree="@tree" branchNr="@stubBranchNumbers" time="@stubTimes" /> -->
                    <!-- <stubs id="stubs" spec="gammaspike.tree.Stubs" tree="@tree" stubsPerBranch="@stubsPerBranch" /> -->
                    
                 </distribution>


                <!-- Correct model -->
                 <prior name="distribution" x="@lambda">
                    <LogNormal  name="distr" meanInRealSpace="true" M="10" S="0.5"/>
                 </prior>

                <prior name="distribution" x="@r0">
                    <Exponential  name="distr" mean="2" offset="1"/>
                 </prior>

                <prior name="distribution" x="@samplingProportion">
                    <Beta name="distr" alpha="2" beta="10"/>
                 </prior>


                 <prior name="distribution" x="@spikeMean">
                    <LogNormal  name="distr" meanInRealSpace="true" M="0.01" S="0.8"/>
                 </prior>


                 <prior name="distribution" x="@spikeShape">
                   <LogNormal  name="distr" meanInRealSpace="true" M="2" S="0.5"/>
                 </prior>

               

                <!-- Misspecification -->
         <!--          <prior name="distribution" x="@lambda">
                    <LogNormal  name="distr" meanInRealSpace="true" M="10" S="3"/>
                 </prior>


                <prior name="distribution" x="@r0">
                    <Exponential  name="distr" mean="5" offset="1"/>
                 </prior>

                <prior name="distribution" x="@samplingProportion">
                    <Beta name="distr" alpha="2" beta="2"/>
                 </prior>


                 <prior name="distribution" x="@spikeMean">
                    <LogNormal  name="distr" meanInRealSpace="true" M="0.1" S="2"/>
                 </prior>


                 <prior name="distribution" x="@spikeShape">
                   <LogNormal  name="distr" meanInRealSpace="true" M="1" S="2"/>
                 </prior> -->
                 


                 <!-- Constant priors -->
                <prior name="distribution" x="@gammaShape">
                    <Exponential name="distr" mean="1"/>
                 </prior> 

                <prior name="distribution" x="@kappa">
                    <Exponential name="distr" mean="5"/>
                 </prior> 



                 <prior name="distribution" x="@clockSD">
                    <Gamma name="distr" alpha="5" beta="0.05"/>
                 </prior> 



                <!--  <prior name="distribution" x="@branchRates">
                    <LogNormal meanInRealSpace="true" name="distr" M="1" S="@clockSD"/>
                </prior>  -->

                <prior name="distribution" spec="gammaspike.distribution.BranchRatePrior" branchRates="@branchRates" tree="@tree" sigma="@clockSD"/>

                <prior id="BranchSpikePrior" name="distribution" spec="gammaspike.distribution.BranchSpikePrior" stubs="@stubs" spikes="@spikes" tree="@tree" shape="@spikeShape"  indicator="@useSpikeModel"/>




            </distribution>

             <distribution id="likelihood" spec="beast.base.inference.CompoundDistribution">





                <distribution data="@data" id="treeLikelihood" spec="TreeLikelihood" tree="@tree">
                    

                    <siteModel spec="beast.base.evolution.sitemodel.SiteModel" shape="@gammaShape" gammaCategoryCount="4">
                       <substModel id="substModel" spec="HKY" kappa="@kappa">
                            <frequencies spec="Frequencies" frequencies="0.25 0.25 0.25 0.25" />
                        </substModel>
                   </siteModel>

                    <branchRateModel id="clockModel" spec="gammaspike.clockmodel.PunctuatedRelaxedClockModel" noSpikeOnDatedTips="false" spikeMean="@spikeMean" indicator="@useSpikeModel" relaxed="true" clock.rate="1.0" stubs="@stubs" tree="@tree" spikes="@spikes" rates="@branchRates" parseFromTree="false" />

                    
             
                    
                </distribution>
            </distribution>

        </distribution>


        <!-- Tree operators -->
        <operator id="YuleSkylineEpochTop.t:tree" spec="EpochFlexOperator" scaleFactor="0.1" tree="@tree" weight="5.0"/>
        <operator id="YuleSkylineEpochAll.t:tree" spec="EpochFlexOperator" fromOldestTipOnly="false" scaleFactor="0.1" tree="@tree" weight="5.0"/>
        <operator id="YuleSkylineTreeFlex.t:tree" spec="TreeStretchOperator" scaleFactor="0.01" tree="@tree" weight="5.0"/>
        <operator id="SAWideFBD.tree" spec="sa.evolution.operators.SAExchange" isNarrow="false"  tree="@tree" weight="3.0"/>
        <operator id="SANarrowFBD.tree" spec="sa.evolution.operators.SAExchange"  tree="@tree" weight="20.0"/>
        <operator id="SAUniformOperatorFBD.tree" spec="sa.evolution.operators.SAUniform" tree="@tree" weight="30.0" />
        <operator id="SATreeRootScalerFBD.tree" spec="sa.evolution.operators.SAScaleOperator" scaleFactor="0.95" tree="@tree" rootOnly="true" weight="3.0" />
        <operator id="SATreeScalerFBD.tree" spec="sa.evolution.operators.SAScaleOperator" scaleFactor="0.95"  tree="@tree" weight="3.0"/>
        <operator id="LeafToSampledAncestorJump.t:tree" spec="sa.evolution.operators.LeafToSampledAncestorJump" tree="@tree" weight="5.0"/>



        <operator id="SpikeUpRateDown" spec="gammaspike.operator.SpikeUpRateDown" parameter="@branchRates" spikes="@spikes" scaleFactor="0.1" weight="5.0"/>
        <!-- <operator id="clockRate.scale" spec="kernel.BactrianScaleOperator" parameter="@clockRate" scaleFactor="0.1" weight="0.5"/> -->
        
         <operator id="BitFlipOperator" spec="BitFlipOperator" uniform="true" parameter="@useSpikeModel" weight="10.0" />


        <!-- Site/clock model operators -->
        <operator id="clockSD.scale" spec="kernel.BactrianScaleOperator" parameter="@clockSD" scaleFactor="0.1" weight="5.0"/>
        <operator id="spikeShape.scale" spec="kernel.BactrianScaleOperator" parameter="@spikeShape" scaleFactor="0.1" weight="1.0"/>
        <operator id="spikeMean.scale" spec="kernel.BactrianScaleOperator" parameter="@spikeMean" scaleFactor="0.1" weight="20.0"/>
        <operator id="spikes.scale" spec="kernel.BactrianScaleOperator" parameter="@spikes" scaleFactor="0.1" weight="30.0"/>

        <operator id="ORCAdaptableOperatorSampler_rates_internal.c:tree" spec="AdaptableOperatorSampler" weight="20.0">
            <parameter idref="branchRates"/>
            <tree idref="tree"/>
            <operator id="StumpedTreeConstantDistanceOperator" spec="gammaspike.operator.StumpedTreeConstantDistanceOperator" stubs="@stubs" twindowSize="0.005" tree="@tree" rates="@branchRates"  weight="10.0"/>
            <operator id="ORCRatesRandomWalk.c:tree" spec="operator.kernel.BactrianRandomWalkOperator" parameter="@branchRates" scaleFactor="0.1" weight="1.0">
                <kernelDistribution id="KernelDistribution$Bactrian.23" spec="operator.kernel.KernelDistribution$Bactrian"/>
            </operator>
            <operator id="ORCRatesScale.c:tree" spec="kernel.BactrianScaleOperator" parameter="@branchRates" scaleFactor="0.5" upper="10.0" weight="1.0">
                <kernelDistribution id="KernelDistribution$Bactrian.24" spec="operator.kernel.KernelDistribution$Bactrian"/>
            </operator>
        </operator>

        <operator id="_KappaScaler.s:dna" spec="ScaleOperator" parameter="@kappa" scaleFactor="0.5" weight="0.1"/>
        <operator id="_gammaShapeScaler.s:dna" spec="ScaleOperator" parameter="@gammaShape" scaleFactor="0.5" weight="0.1"/>

        <!-- Tree prior operators -->
        <operator id="lambda.scale" spec="kernel.BactrianScaleOperator" parameter="@lambda" scaleFactor="0.1" weight="0.5"/>
        <operator id="r0.scale" spec="kernel.BactrianScaleOperator" parameter="@r0" scaleFactor="0.1" weight="0.5"/>
        <operator id="samplingProportion.scale" spec="kernel.BactrianScaleOperator" parameter="@samplingProportion" scaleFactor="0.1" weight="0.5"/>
        <operator id="AVMN.tree.prior" spec="kernel.AdaptableVarianceMultivariateNormalOperator" beta="0.05" burnin="2000" initial="2000" weight="1">
            <transformations spec="operator.kernel.Transform$LogTransform">
                 <f idref="lambda"/>
                 <f idref="r0"/>
            </transformations>
             <transformations spec="operator.kernel.Transform$LogitTransform">
                 <f idref="samplingProportion"/>
            </transformations>
        </operator> 


        <!-- AVMN -->
        <operator id="AVMN" spec="kernel.AdaptableVarianceMultivariateNormalOperator" beta="0.05" burnin="500" initial="1000" weight="5.0">
            <transformations spec="operator.kernel.Transform$LogTransform">
                 <f idref="lambda"/>
                 <f idref="spikeShape"/>
                 <f idref="spikeMean"/>
                 <!-- <f idref="clockRate"/> -->
                 <f idref="r0"/>
            </transformations>
        </operator> 


     
       

        <!-- Stub operators -->
     <!--    <operator id="swapStubs" spec="SwapOperator" intparameter="@stubsPerBranch" weight="10.0"/> 
        <operator id="stubRandomWalk" spec="IntRandomWalkOperator" parameter="@stubsPerBranch" weight="10.0" windowSize="1"/> 
         -->

         
        <!-- Stub operators -->
       <!--  <operator id="stubCreator" spec="gammaspike.operator.StubCreator" stubs="@stubs" tree="@tree" weight="1.0" />
        <operator id="stub.scale" spec="kernel.BactrianScaleOperator" parameter="@stubTimes" scaleFactor="0.1" weight="1.0" />  
        <operator id="stubTimesInterval" spec="kernel.BactrianIntervalOperator" parameter="@stubTimes" scaleFactor="0.1" weight="1.0"/>
        <operator id="swapBranches" spec="gammaspike.operator.StubSwapOperator" parameter="@stubBranchNumbers" weight="1.0"/> 
        --> 


        <logger id="tracelog" spec="Logger" fileName="$(filebase).log" logEvery="10000" model="@posterior" sanitiseHeaders="true" sort="smart">
            <log idref="posterior"/>
            <log idref="treeLikelihood"/>
            <log idref="prior"/>
            <log idref="lambda"/>
            <log idref="spikeShape"/>
            <log idref="spikeMean"/>
            <log idref="r0"/>
            <log idref="samplingProportion"/>

            <log idref="useSpikeModel"/>
            <log idref="gammaShape"/>

            <log idref="stubs"/>
            <log id="treeHeight" spec="beast.base.evolution.tree.TreeStatLogger" tree="@tree"/>
            <log idref="kappa"/>
            <log idref="branchRates"/>
            <log idref="clockSD"/>



             <log id="weightedSpikes" spec="gammaspike.clockmodel.SpikeSize" spikes="@spikes" spikeMean="@spikeMean"/>


            

        </logger>
        <logger id="screenlog" spec="Logger" logEvery="10000">
            <log idref="likelihood"/>
            <log idref="treeHeight" />
            <log idref="useSpikeModel"/>
            <log idref="spikeMean"/>
            <log idref="stubs"/>
        </logger>

        <logger id="treelog" spec="Logger" fileName="stumped.trees" logEvery="10000" mode="tree">
            <log id="TreeWithMetaDataLogger.t:class1" spec="gammaspike.logger.StumpedTreeLogger" tree="@tree">
                <stubs idref="stubs" />
                <metadata idref="branchRates" />
                <metadata idref="weightedSpikes"/>
            </log>
        </logger> 
        <operatorschedule id="OperatorSchedule" spec="OperatorSchedule" autoOptimizeDelay="5000"/>
    </run>

</beast>
