<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast beautitemplate='Standard' beautistatus='' namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihoodbeast.base.evolution.alignment:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.tree.coalescent:beast.pkgmgmt:beast.base.core:beast.base.inference.util:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood" required="" version="2.7">




<map name="Beta">beast.base.inference.distribution.Beta</map>
<map name="Exponential">beast.base.inference.distribution.Exponential</map>
<map name="InverseGamma">beast.base.inference.distribution.InverseGamma</map>
<map name="LogNormal">beast.base.inference.distribution.LogNormalDistributionModel</map>
<map name="Gamma">beast.base.inference.distribution.Gamma</map>
<map name="Uniform">beast.base.inference.distribution.Uniform</map>
<map name="prior">beast.base.inference.distribution.Prior</map>
<map name="LaplaceDistribution">beast.base.inference.distribution.LaplaceDistribution</map>
<map name="OneOnX">beast.base.inference.distribution.OneOnX</map>
<map name="Normal">beast.base.inference.distribution.Normal</map>
<map name="taxon">beast.base.evolution.alignment.Taxon</map>
<map name="taxonset">beast.base.evolution.alignment.TaxonSet</map>
<map name="Dirichlet" >beast.base.inference.distribution.Dirichlet</map>


<parameter id="branchRates" spec="beast.base.inference.parameter.RealParameter">1</parameter>
<parameter id="spikes" spec="beast.base.inference.parameter.RealParameter">1</parameter>
<parameter id="nstubsPerBranch" spec="beast.base.inference.parameter.IntegerParameter">0</parameter>
<parameter id="indicators" spec="beast.base.inference.parameter.IntegerParameter">0</parameter>

<data id="simulatedData" spec='beastfx.app.seqgen.SimulatedAlignment' sequencelength="20" outputFileName="simulated.xml" dataType="nucleotide">

	<tree id="simulatedTree" spec='beast.base.evolution.tree.TreeParser' newick="$(tree)" IsLabelledNewick="true" adjustTipHeights="false"/>



	<data id="mockData" spec="beast.base.evolution.alignment.Alignment" dataType="nucleotide">
			 <plate var="s" range="$(taxonRange)">
        	<sequence taxon="$(s)">?</sequence>
   		 </plate>
	</data>


	<siteModel spec='beast.base.evolution.sitemodel.SiteModel' shape="$(gammaShape)" gammaCategoryCount="4">
	<!-- <siteModel spec='beast.base.evolution.sitemodel.SiteModel' gammaCategoryCount="1"> -->
		<substModel id="substModel" spec="HKY" kappa="$(kappa)">
			<frequencies spec="Frequencies" frequencies="0.25 0.25 0.25 0.25" />
		</substModel>
   </siteModel>


	<!--  -->
   <branchRateModel id="clockModel" spec="gammaspike.clockmodel.PunctuatedRelaxedClockModel" spikeMean="$(spikeMean)" indicator="$(useSpikeModel)" relaxed="true" clock.rate="1.0" nstubsPerBranch="@nstubsPerBranch" tree="@simulatedTree" spikes="@spikes" rates="@branchRates" parseFromTree="true" />


    <!-- <branchRateModel id="clockModel" spec="beast.base.evolution.branchratemodel.StrictClockModel"  clock.rate="1.0" /> -->



</data>


	
<!-- dummy -->
<run id="mcmc" spec="beast.base.inference.MCMC" chainLength="1">



    <state id="state" spec="beast.base.inference.State" storeEvery="50000">
		<parameter id="popMean" spec="parameter.RealParameter" lower="0.0" name="stateNode">0.1</parameter>
		<tree id="tree" name="stateNode">
            <taxonset  spec="beast.base.evolution.alignment.TaxonSet">
                <data idref="simulatedData" name="alignment"/>
            </taxonset>
        </tree>

    </state>



    <distribution id="posterior" spec="beast.base.inference.CompoundDistribution">
	
		 <prior id="popMean.prior" name="distribution" x="@popMean">
                <LogNormal meanInRealSpace="true" name="distr" M="0.05" S="0.5"/>
            </prior>

    </distribution>


	<operator id="Scale.popmean" spec="kernel.BactrianScaleOperator" parameter="@popMean" upper="10.0" weight="1.0"/>


	<logger fileName="simulated.log" id="tracelog" logEvery="1" sanitiseHeaders="true" sort="smart">
		<log idref="popMean"/>
	</logger>

    <logger id="screenlog" spec="Logger" logEvery="10000">
		<log idref="popMean"/>
		
    </logger>

    <logger id="treelog" spec="Logger" fileName="simulated.trees" logEvery="1" mode="tree">
        <log spec="beast.base.evolution.TreeWithMetaDataLogger" sort="false" tree="@simulatedTree">
        	<metadata idref="nstubsPerBranch" />
        	<metadata idref="spikes" />
        	<metadata idref="branchRates" />
        </log>
    </logger> 
	




</run>

</beast>
