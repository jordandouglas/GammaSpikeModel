<beast version='2.0'
       namespace='beast.app.beauti:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.branchratemodel:beast.base.evolution.speciation:beast.base.evolution.tree.coalescent:beast.base.util:beast.base.math:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.evolution:beast.base.math.distributions:orc.operators:orc.ner'>


    <!-- Clock models -->
    <mergewith point='clockModelTemplates'>

          <!-- Gamma spike relaxed clock -->
        <subtemplate id='GammaSpikeRelaxedClock' class='gammaspike.clockmodel.PunctuatedRelaxedClockModel'
                     mainid='GammaSpikeRelaxedClock.c:$(n)'
                     suppressInputs='
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.tree,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.burstSize,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.spikes,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.distr,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.stubs,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.nstubsPerBranch,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.parseFromTree,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.initialSpike,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.noSpikeOnDatedTips,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.rates,
                     gammaspike.clockmodel.PunctuatedRelaxedClockModel.flabel,
                     gammaspike.distribution.BranchSpikePrior.tree,
                     gammaspike.distribution.BranchSpikePrior.stubs,
                     gammaspike.distribution.BranchSpikePrior.nstubs'
            hmc='GammaSpikeRelaxedClock/clock.rate/=StrictClock/clock.rate,
                 GSMclockRate/index/=Priors/ClockPrior/'>
            <![CDATA[
            <parameter id="GSMbranchRates.c:$(n)" spec="parameter.RealParameter" name="stateNode" lower="0" dimension="1">1</parameter> 
            <parameter id="GSMspikes.c:$(n)" spec="parameter.RealParameter" name="stateNode" lower="0" dimension="1">1</parameter> 
            <parameter id="GSMclockSD.c:$(n)" spec="parameter.RealParameter" name="stateNode" lower="0">0.5</parameter>
            <parameter id="GSMspikeShape.c:$(n)" spec="parameter.RealParameter" name="stateNode" lower="0.2">2</parameter>
            <parameter id="GSMspikeMean.c:$(n)" spec="parameter.RealParameter" name="stateNode" lower="0" upper="1">0.01</parameter>

            <parameter id="GSMclockRate.c:$(n)" spec="parameter.RealParameter" name="stateNode" lower="0">1</parameter>
           
            <parameter id="GSMuseSpikeModel.c:$(n)" spec="parameter.BooleanParameter" name="stateNode">0</parameter>

            <log id="GSMweightedSpikes.c:$(n)" spec="gammaspike.clockmodel.SpikeSize" spikes="@GSMspikes.c:$(n)" spikeMean="@GSMspikeMean.c:$(n)" clockModel="@GammaSpikeRelaxedClock.c:$(n)" />

            <branchRateModel id="GammaSpikeRelaxedClock.c:$(n)" spec="gammaspike.clockmodel.PunctuatedRelaxedClockModel" 
                	indicator="@GSMuseSpikeModel.c:$(n)" 
                	clock.rate="@GSMclockRate.c:$(n)" 
                	tree="@Tree.t:$(n)" 
                	spikes="@GSMspikes.c:$(n)" 
                  spikeMean="@GSMspikeMean.c:$(n)"
                	rates="@GSMbranchRates.c:$(n)" 
                	parseFromTree="false"
                	relaxed="true">
			</branchRateModel>

                 <prior id="GSMclockRatePrior.c:$(n)" name="distribution" x="@GSMclockRate.c:$(n)">
					    <Gamma alpha="0.1" beta="100.0" name="distr"/>
                 </prior>

                 <prior id="GSMclockSDPrior.c:$(n)" name="distribution" x="@GSMclockSD.c:$(n)">
                    <Gamma name="distr" alpha="5" beta="0.05"/>
                 </prior> 

                 <prior id="GSMbranchRatePrior.c:$(n)" name="distribution" x="@GSMbranchRates.c:$(n)">
                    <LogNormal meanInRealSpace="true" name="distr" M="1" S="@GSMclockSD.c:$(n)"/>
                 </prior> 

                <prior id="GSMspikeMeanPrior.c:$(n)" name="distribution" x="@GSMspikeMean.c:$(n)">
                    <LogNormal  name="distr" meanInRealSpace="true" M="0.01" S="1.2"/>
                 </prior>

                 <prior id="GSMspikeShapePrior.c:$(n)" name="distribution" x="@GSMspikeShape.c:$(n)">
                    <LogNormal  name="distr" meanInRealSpace="true" M="2" S="0.5"/>
                 </prior>

                <prior id="GSMbranchSpikePrior.c:$(n)" name="distribution" 
                	spec="gammaspike.distribution.BranchSpikePrior" 
                	spikes="@GSMspikes.c:$(n)" 
                	shape="@GSMspikeShape.c:$(n)" 
                  indicator="@GSMuseSpikeModel.c:$(n)"
                	tree="@Tree.t:$(n)"/>
		

      <operator id="GSMSpikeUpRateDown.c:$(n)" spec="gammaspike.operator.SpikeUpRateDown" parameter="@GSMbranchRates.c:$(n)" spikes="@GSMspikes.c:$(n)" scaleFactor="0.1" weight="5.0"/>
      <operator id="GSMclockRateScale.c:$(n)" spec="kernel.BactrianScaleOperator" parameter="@GSMclockRate.c:$(n)" scaleFactor="0.1" weight="0.5"/>
      <operator id="GSMBitFlipOperator.c:$(n)" spec="BitFlipOperator" uniform="true" parameter="@GSMuseSpikeModel.c:$(n)" weight="1.0" />
      


      <operator id="GSMSpikeFlipOperator.c:$(n)" spec="gammaspike.operator.SpikeFlipOperator" spikes="@GSMspikes.c:$(n)" spikeMean="0.005" weight="3.0"/>
      <operator id="GSMSpikeAndSampledAncestorJump.c:$(n)" spec="gammaspike.operator.SpikeAndSampledAncestorJump" tree="@Tree.t:$(n)" spikes="@GSMspikes.c:$(n)" spikeMean="0.001" weight="5.0"/>
      <operator id="GSMSpikeAndSampledAncestorNeighbourJump.c:$(n)" spec="gammaspike.operator.SpikeAndSampledAncestorNeighbourJump" tree="@Tree.t:$(n)" spikes="@GSMspikes.c:$(n)" spikeMean="0.001" weight="5.0"/>
         

        <!-- Site/clock model operators -->
        <operator id="GSMclockSDScale.c:$(n)" spec="kernel.BactrianScaleOperator" parameter="@GSMclockSD.c:$(n)" scaleFactor="0.1" weight="5.0"/>
        <operator id="GSMspikeShapeScale.c:$(n)" spec="kernel.BactrianScaleOperator" parameter="@GSMspikeShape.c:$(n)" scaleFactor="0.1" weight="1.0"/>
        <operator id="GSMspikeMeanScale.c:$(n)" spec="kernel.BactrianScaleOperator" parameter="@GSMspikeMean.c:$(n)" scaleFactor="0.1" weight="3.0"/>
        <operator id="GSMspikesScale.c:$(n)" spec="kernel.BactrianScaleOperator" parameter="@GSMspikes.c:$(n)" scaleFactor="0.1" weight="30.0"/>
        <operator id="GSMUpDownSpikeTree.c:$(n)" spec="gammaspike.operator.StumpedTreeScaler" scaleFactor="0.1" weight="5.0">
            <tree idref="Tree.t:$(n)" />
            <down idref="GSMspikeMean.c:$(n)" />
        </operator>


        <operator id="GSMAdaptableOperatorSamplerRatesInternal.c:$(n)" spec="AdaptableOperatorSampler" weight="20.0">
            <parameter idref="GSMbranchRates.c:$(n)"/>
            <tree idref="Tree.t:$(n)"/>
            <operator id="GSMStumpedTreeConstantDistanceOperator.c:$(n)" spec="gammaspike.operator.StumpedTreeConstantDistanceOperator" twindowSize="0.005" tree="@Tree.t:$(n)" rates="@GSMbranchRates.c:$(n)"  weight="10.0"/>
            <operator id="GSMORCRatesRandomWalk.c:tree.c:$(n)" spec="operator.kernel.BactrianRandomWalkOperator" parameter="@GSMbranchRates.c:$(n)" scaleFactor="0.1" weight="1.0">
                <kernelDistribution spec="operator.kernel.KernelDistribution$Bactrian"/>
            </operator>
            <operator id="GSMORCRatesScale.c:tree.c:$(n)" spec="kernel.BactrianScaleOperator" parameter="@GSMbranchRates.c:$(n)" scaleFactor="0.5" upper="10.0" weight="1.0">
                <kernelDistribution spec="operator.kernel.KernelDistribution$Bactrian"/>
            </operator>
        </operator>

		<log id="GSMrateStat.c:$(n)" spec="beast.base.evolution.RateStatistic" tree="@Tree.t:$(n)" branchratemodel="@GammaSpikeRelaxedClock.c:$(n)"/>
      <log id="GSMSaltativeProportionLogger.c:$(n)" spec="gammaspike.logger.SaltativeProportionLogger" tree="@Tree.t:$(n)" clock="@GammaSpikeRelaxedClock.c:$(n)"/>

			]]>


            <connect srcID='GSMbranchRates.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(GSMbranchRates.c:$(n)) and GSMbranchRates.c:$(n)/estimate=true'/>
            <connect srcID='GSMspikes.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(GSMspikes.c:$(n)) and GSMspikes.c:$(n)/estimate=true'/>
            <connect srcID='GSMclockSD.c:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(GSMclockSD.c:$(n)) and GSMclockSD.c:$(n)/estimate=true'/>

            <connect srcID='GSMspikeShape.c:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(GSMspikeShape.c:$(n)) and GSMspikeShape.c:$(n)/estimate=true'/>
            <connect srcID='GSMspikeMean.c:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(GSMspikeMean.c:$(n)) and GSMspikeMean.c:$(n)/estimate=true'/>
            <connect srcID='GSMclockRate.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(GSMclockRate.c:$(n)) and GSMclockRate.c:$(n)/estimate=true'/>
            <connect srcID='GSMuseSpikeModel.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(GSMuseSpikeModel.c:$(n)) and GSMuseSpikeModel.c:$(n)/estimate=true'/>


            

            <connect srcID='GSMclockRatePrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(GSMclockRate.c:$(n)) and GSMclockRate.c:$(n)/estimate=true'>
					Gamma spike relaxed clock mean of partition c:$(n)
            </connect>
            <connect srcID='GSMclockSDPrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n)) and GSMclockSD.c:$(n)/estimate=true'>Gamma spike relaxed clock stdev of partition c:$(n)
            </connect>
            <connect srcID='GSMbranchRatePrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(GSMbranchRates.c:$(n))'>Gamma spike relaxed clock branch rates of partition c:$(n)
            </connect>
            <connect srcID='GSMspikeMeanPrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n)) and GSMspikeMean.c:$(n)/estimate=true'>Gamma spike relaxed clock spike mean of partition c:$(n)
            </connect>
            <connect srcID='GSMspikeShapePrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n)) and GSMspikeShape.c:$(n)/estimate=true'>Gamma spike relaxed clock spike shape of partition c:$(n)
            </connect>
            <connect srcID='GSMbranchSpikePrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n))'>Gamma spike relaxed clock branch spike of partition c:$(n)
            </connect>


            <connect srcID='GSMuseSpikeModel.c:$(n)' targetID='tracelog' inputName='log' if='inlikelihood(GSMuseSpikeModel.c:$(n))'/>
            <connect srcID='GSMclockRate.c:$(n)' targetID='tracelog' inputName='log' if='inlikelihood(GSMclockRate.c:$(n)) and GSMclockRate.c:$(n)/estimate=true'/>
            <connect srcID='GSMclockSD.c:$(n)' targetID='tracelog' inputName='log' if='inposterior(GSMclockSD.c:$(n))'/>
            <connect srcID='GSMspikeShape.c:$(n)' targetID='tracelog' inputName='log' if='inposterior(GSMspikeShape.c:$(n))'/>
            <connect srcID='GSMspikeMean.c:$(n)' targetID='tracelog' inputName='log' if='inposterior(GSMspikeMean.c:$(n))'/>
            <connect srcID='GSMStumpedTreePrior.c:$(n)' targetID='tracelog' inputName='log' if='inposterior(GSMStumpedTreePrior.c:$(n))'/>
            <connect srcID='GSMrateStat.c:$(n)' targetID='tracelog' inputName='log' if='inlikelihood(GammaSpikeRelaxedClock.c:$(n))'/>
            <connect srcID='GSMSaltativeProportionLogger.c:$(n)' targetID='tracelog' inputName='log' if='inlikelihood(GammaSpikeRelaxedClock.c:$(n))'/>


            <connect srcID='GammaSpikeRelaxedClock.c:$(n)' targetID='TreeWithMetaDataLogger.t:$(n)' inputName='branchratemodel'
                     if='inposterior(GammaSpikeRelaxedClock.c:$(n))'/>
            <connect srcID='GSMweightedSpikes.c:$(n)' targetID='TreeWithMetaDataLogger.t:$(n)' inputName='metadata' 
                     if='inposterior(GammaSpikeRelaxedClock.c:$(n))'/>
            <connect srcID='GSMbranchRates.c:$(n)' targetID='TreeWithMetaDataLogger.t:$(n)' inputName='metadata' 
                     if='inposterior(GammaSpikeRelaxedClock.c:$(n))'/>


            <connect srcID='GSMSpikeUpRateDown.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n))'>Up/down rates and spikes of partition c:$(n)
            </connect>
            <connect srcID='GSMclockRateScale.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n)) and inlikelihood(GSMclockRate.c:$(n)) and GSMclockRate.c:$(n)/estimate=true'>Scale mean clock rate and tree of partition c:$(n)
            </connect>


             <connect srcID='GSMUpDownSpikeTree.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n)) and GSMuseSpikeModel.c:$(n)/estimate=true and Tree.t:$(n)/estimate=true'>
                     Move spike model mean and tree simultaneously for partition c:$(n)
            </connect>


            <connect srcID='GSMclockRate.c:$(n)' targetID='GSMUpDownSpikeTree.c:$(n)' inputName='down'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n)) and GSMuseSpikeModel.c:$(n)/estimate=true and Tree.t:$(n)/estimate=true and GSMclockRate.c:$(n)/estimate=true' />



            

            <connect srcID='GSMBitFlipOperator.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(GammaSpikeRelaxedClock.c:$(n)) and GSMuseSpikeModel.c:$(n)/estimate=true'/>
            <connect srcID='GSMclockSDScale.c:$(n)' targetID='mcmc' inputName='operator' if='inposterior(GSMclockSD.c:$(n))'/>
            <connect srcID='GSMspikeShapeScale.c:$(n)' targetID='mcmc' inputName='operator' if='inposterior(GSMspikeShape.c:$(n))'/>
            <connect srcID='GSMspikeMeanScale.c:$(n)' targetID='mcmc' inputName='operator' if='inposterior(GSMspikeMean.c:$(n))'/>

            <connect srcID='GSMspikesScale.c:$(n)'       targetID='mcmc' inputName='operator' if='inposterior(GSMspikes.c:$(n)) and GSMspikes.c:$(n)/estimate=true'/>
            <connect srcID='GSMSpikeFlipOperator.c:$(n)' targetID='mcmc' inputName='operator' if='inposterior(GSMspikes.c:$(n)) and GSMspikes.c:$(n)/estimate=true'/>
            
            <connect srcID='GSMAdaptableOperatorSamplerRatesInternal.c:$(n)' targetID='mcmc' inputName='operator' if='inlikelihood(GammaSpikeRelaxedClock.c:$(n))'/>


             <!-- connect sampled ancestor spike operators if we are using fossiled birth death model -->
           <connect srcID='GSMSpikeAndSampledAncestorJump.c:$(n)' targetID='mcmc' inputName='operator' 
                     if='inposterior(FossilisedBirthDeathModelWithStubs.t:$(n)) and Tree.t:$(n)/estimate=true and inposterior(GSMspikes.c:$(n)) and GSMspikes.c:$(n)/estimate=true'>
                     Toggles a node between unspiked sampled ancestor (branch length 0, spike size 0), to a spiked cousin (branch length >0, spike size >0) 
           </connect>
            <connect srcID='GSMSpikeAndSampledAncestorNeighbourJump.c:$(n)' targetID='mcmc' inputName='operator' 
                     if='inposterior(FossilisedBirthDeathModelWithStubs.t:$(n)) and Tree.t:$(n)/estimate=true and inposterior(GSMspikes.c:$(n)) and GSMspikes.c:$(n)/estimate=true'>
                     Toggles a node between unspiked sampled ancestor with an unspiked sibling (branch length 0, spike size 0, sibling spike 0), to a spiked cousin with a spiked sibling (branch length >0, spike size >0, sibling spike >0) 
           </connect>




            <connect srcID='Tree.t:$(n)' targetID='GammaSpikeRelaxedClock.c:$(n)' inputName='tree' if='inlikelihood(GammaSpikeRelaxedClock.c:$(n))'/>
            <connect srcID='Tree.t:$(n)' targetID='GSMrateStat.c:$(n)' inputName='tree' if='inlikelihood(GammaSpikeRelaxedClock.c:$(n))'/>
            <connect srcID='Tree.t:$(n)' targetID='GSMSaltativeProportionLogger.c:$(n)' inputName='tree' if='inlikelihood(GammaSpikeRelaxedClock.c:$(n))'/>

        </subtemplate>
	</mergewith>
</beast>
